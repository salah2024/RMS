// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250903142757_a80")]
    partial class a80
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RMS.Controllers.AbnieFani.Dto.ItemsFBDependQuestionForAbnieFaniForSPDto", b =>
                {
                    b.Property<int>("DefaultValue")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuesForAbnieFaniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Vahed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ItemsFBDependQuestionForAbnieFaniForSPDto");
                });

            modelBuilder.Entity("RMS.Controllers.AmalyateKhaki.Dto.GetExistingKMAmalyateKhakiInfoWithBarAvordDto", b =>
                {
                    b.Property<Guid>("BaravordUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FromKM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromKMSplit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KMNum")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToKM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToKMSplit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("GetExistingKMAmalyateKhakiInfoWithBarAvordDto");
                });

            modelBuilder.Entity("RMS.Controllers.Operation.Dto.ItemsFBShomarehValueShomarehUpdateProcedureDto", b =>
                {
                    b.Property<bool>("check")
                        .HasColumnType("bit");

                    b.ToTable("ItemsFBShomarehValueShomarehUpdateProcedureDto");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAbadDivarBali", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("b")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("f")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("h")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("m")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("x")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("tblAbadDivarBali");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAbadeKoole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DerzEnbesat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HadAghalZavieEstekak")
                        .HasColumnType("int");

                    b.Property<long>("HadAksarErtefaKooleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Hs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("a1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("a2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("b1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("b2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("c1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("c2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("e")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("f")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("k")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("m")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("n")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("p1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("p2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("t")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HadAksarErtefaKooleId");

                    b.ToTable("tblAbadeKoole");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAbroDaliDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AbadeKooleId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Fasele")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Ghotr")
                        .HasColumnType("int");

                    b.Property<int>("Pos")
                        .HasColumnType("int");

                    b.Property<decimal>("Tedad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tool")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VazMilgard1M")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VazMilgardSE")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AbadeKooleId");

                    b.ToTable("tblAbroDaliDetails");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaravordUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FromKM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KMNum")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToKM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("BaravordUserId");

                    b.ToTable("tblAmalyateKhakiInfoForBarAvord");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AmalyateKhakiInfoForBarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NoeKhakBardariId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("boolValue")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("AmalyateKhakiInfoForBarAvordId");

                    b.HasIndex("NoeKhakBardariId");

                    b.ToTable("tblAmalyateKhakiInfoForBarAvordDetails");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetailsMore", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AmalyateKhakiInfoForBarAvordDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AmalyateKhakiInfoForBarAvordDetailsId");

                    b.ToTable("tblAmalyateKhakiInfoForBarAvordDetailsMore");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetailsRizMetre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AmalyateKhakiInfoForBarAvordDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RizMetreUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AmalyateKhakiInfoForBarAvordDetailsId");

                    b.HasIndex("RizMetreUserId");

                    b.ToTable("AmalyateKhakiInfoForBarAvordDetailsRizMetres");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordEzafeBaha", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AmalyateKhakiInfoForBarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Arz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NoeKhakBardariEzafeBahaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tool")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AmalyateKhakiInfoForBarAvordId");

                    b.HasIndex("NoeKhakBardariEzafeBahaId");

                    b.ToTable("tblAmalyateKhakiInfoForBarAvordEzafeBaha");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordEzafeBahaRizMetre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AmalyateKhakiInfoForBarAvordEzafeBahaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RizMetreUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AmalyateKhakiInfoForBarAvordEzafeBahaId");

                    b.HasIndex("RizMetreUserId");

                    b.ToTable("tblAmalyateKhakiInfoForBarAvordEzafeBahaRizMetre");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordMore", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AmalyateKhakiInfoForBarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AmalyateKhakiInfoForBarAvordId");

                    b.ToTable("tblAmalyateKhakiInfoForBarAvordMore");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAnalizBaha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("BahayeVahed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FBShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MeghdarMeghias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("NiroMasalehMashinId")
                        .HasColumnType("bigint");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<long>("Vahed")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("bahayeKol")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("tblAnalizBaha");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAppOperationInfoDetails", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Answer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("AppOperationInfoMainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("QuetionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AppOperationInfoMainId");

                    b.HasIndex("QuetionId");

                    b.ToTable("tblAppOperationInfoDetails");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAppOperationInfoMain", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSending")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TimeSending")
                        .HasColumnType("time");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("XState")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YState")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("OperationId");

                    b.ToTable("tblAppOperationInfoMain");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAppQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("LatinTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("tblAppQuestion");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBarAvordAddedBoard", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Arz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BoardTip")
                        .HasColumnType("int");

                    b.Property<int>("BoardType")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ertefa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Material")
                        .HasColumnType("int");

                    b.Property<decimal?>("MeghdarPrintType")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentPrintPOP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PrintType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sharh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<long?>("Tedad")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Thickness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("UsePOP")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordId");

                    b.ToTable("tblBarAvordAddedBoard");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBarAvordAddedBoardStand", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardStandItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tedad")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordId");

                    b.HasIndex("BoardStandItemId");

                    b.ToTable("tblBarAvordAddedBoardStand");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBaravordUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<long>("Num")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("tblBaravordUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBaseInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Priority")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("tblBaseInfo");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBaseInfoType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblBaseInfoType");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBoardInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("BoardSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BoardType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("tblBoardInfo");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBoardItems", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AddedItemType")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Material")
                        .HasColumnType("int");

                    b.Property<int?>("PrintType")
                        .HasColumnType("int");

                    b.Property<int?>("PrintTypeBase")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Thikness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Tip")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("tblBoardItems");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBoardStandItems", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedFBShomareh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Arz")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("BoardStandType")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ertefa")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sharh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tedad")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tool")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal?>("Zarib")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("ID");

                    b.ToTable("tblBoardStandItems");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsConditionContext", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConditionContextRel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ConditionGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Des")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasDes")
                        .HasColumnType("bit");

                    b.Property<string>("TitleDes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConditionGroupId");

                    b.ToTable("tblConditionContext");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsConditionGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConditionGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblConditionGroup");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsDastakPolInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("PolVaAbroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Shomareh")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ToolW")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Zavie")
                        .HasColumnType("int");

                    b.Property<decimal>("hMin")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PolVaAbroId");

                    b.ToTable("tblDastakPolInfo");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsFB", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("BahayeVahedNew")
                        .HasColumnType("bigint");

                    b.Property<string>("BahayeVahedSharh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BahayeVahedZarib")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordId");

                    b.ToTable("tblFB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsFehrestBaha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BahayeVahed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoeFB")
                        .HasColumnType("int");

                    b.Property<long>("Sal")
                        .HasColumnType("bigint");

                    b.Property<string>("Sharh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vahed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblFehrestBaha");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsFosoul", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NoeFosoulId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NoeFosoulId");

                    b.ToTable("tblFosoul");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsGeneralProjectTiming", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountDaies")
                        .HasColumnType("int");

                    b.Property<int>("CourseCountDaies")
                        .HasColumnType("int");

                    b.Property<int>("HolyCourseCountDaies")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblGeneralProjectTiming");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsHadAksarErtefaKoole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("DahaneAbro")
                        .HasColumnType("int");

                    b.Property<decimal>("HadAksarErtefaKoole")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TedadDahaneh")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblHadAksarErtefaKoole");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsAddingToFB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharacterPlus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ConditionType")
                        .HasColumnType("smallint");

                    b.Property<string>("DesOfAddingItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsAdding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalWorking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ItemsHasCondition_ConditionContextId")
                        .HasColumnType("bigint");

                    b.Property<string>("UseItemForAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHasCondition_ConditionContextId");

                    b.ToTable("tblItemsAddingToFB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsFBDependQuestionForAbnieFani", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("DefaultValue")
                        .HasColumnType("int");

                    b.Property<string>("ItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuesForAbnieFaniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Vahed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuesForAbnieFaniId");

                    b.ToTable("tblItemsFBDependQuestionForAbnieFani");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsFBShomarehValueShomareh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FBShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetValuesShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BarAvordId");

                    b.ToTable("tblItemsFBShomarehValueShomareh");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsFields", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DefaultValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnteringValue")
                        .HasColumnType("bit");

                    b.Property<string>("ItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<string>("Vahed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblItemsFields");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsForGetValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemShomarehForGetValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RizMetreFieldsRequire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblItemsForGetValues");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsHasCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemFBShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblItemsHasCondition");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsHasConditionAddedToFB", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ConditionGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("FBShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ItemsHasCondition_ConditionContextId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Meghdar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Meghdar2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordId");

                    b.HasIndex("ConditionGroupId");

                    b.HasIndex("ItemsHasCondition_ConditionContextId");

                    b.ToTable("tblItemsHasConditionAddedToFB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsHasCondition_ConditionContext", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ConditionContextId")
                        .HasColumnType("bigint");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Des")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesForEnteringValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableDeleting")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableEditing")
                        .HasColumnType("bit");

                    b.Property<int>("EnteringCount")
                        .HasColumnType("int");

                    b.Property<bool>("HasEnteringValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<long>("ItemsHasConditionId")
                        .HasColumnType("bigint");

                    b.Property<string>("MaxValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MoveToRel")
                        .HasColumnType("bit");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("StepChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ViewCheckAllRecords")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConditionContextId");

                    b.HasIndex("ItemsHasConditionId");

                    b.HasIndex("ParentId");

                    b.ToTable("tblItemsHasCondition_ConditionContext");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsHasHaml", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemsFB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblItemsHasHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsKiloMetrazhOfHaml", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("KM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("OperationOfHamlId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BarAvordId");

                    b.HasIndex("OperationOfHamlId");

                    b.ToTable("tblKiloMetrazhOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsMashinType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MashinTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblMashinType");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsNiroMasalehMashin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeAmel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblNiroMasalehMashin");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsNiroZaribKarKard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeAmel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAmelMoaser")
                        .HasColumnType("bit");

                    b.Property<long>("NoeMashinAlatId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<int>("ZaribKarKard")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NoeMashinAlatId");

                    b.HasIndex("OperationId");

                    b.ToTable("tblNiroZaribKarKard");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsNoeFosoul", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("NoeFaslName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblNoeFosoul");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsNoeKhakBardari", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FBItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblNoeKhakBardari");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsNoeKhakBardariEzafeBaha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CountForEnteringValue")
                        .HasColumnType("int");

                    b.Property<string>("DefaultForEnteringValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesForEnteringValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FBItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<bool>("hasEnteringValue")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("tblNoeKhakBardariEzafeBaha");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FunctionCall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("Id", "Year")
                        .IsUnique();

                    b.ToTable("tblOperation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationAmelMoaser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeAmel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.ToTable("tblOperationAmelMoaser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationHasAddedOperations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AddedOperationId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AddedOperationId");

                    b.HasIndex("OperationId");

                    b.ToTable("tblOperationHasAddedOperations");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationHasAddedOperationsLevelNumber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("LevelNumber")
                        .HasColumnType("int");

                    b.Property<long>("OperationHasAddedOperationsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperationHasAddedOperationsId");

                    b.ToTable("tblOperationHasAddedOperationsLevelNumber");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationHasAddedOperationsType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblOperationHasAddedOperationsType");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperation_ItemsFB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemsFBShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationId")
                        .IsUnique();

                    b.ToTable("tblOperation_ItemsFB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationsOfHaml", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblOperationsOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationsOfHamlAndItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemsFB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KiloMetrazh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<long>("OperationsOfHamlId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationsOfHamlId");

                    b.ToTable("tblOperationsOfHamlAndItems");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationsOfHaml_ItemsHasHaml", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ItemsHasHamlId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperationsOfHamlId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemsHasHamlId");

                    b.HasIndex("OperationsOfHamlId");

                    b.ToTable("tblOperationsOfHaml_ItemsHasHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsPolVaAbroBarAvord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarAvordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DahaneAbro")
                        .HasColumnType("float");

                    b.Property<decimal>("HadAksarErtefaKoole")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Hs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short>("NahveEjraDal")
                        .HasColumnType("smallint");

                    b.Property<short>("NoeBanaii")
                        .HasColumnType("smallint");

                    b.Property<long>("PolNum")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TedadDahaneh")
                        .HasColumnType("int");

                    b.Property<decimal>("ToolAbro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("X")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Y")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ZavieBie")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordId");

                    b.ToTable("tblPolVaAbroBarAvord");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsProject", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("tblProject");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsProjectCalendar", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ActiveDeActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GeneralProjectTimingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("GeneralProjectTimingId");

                    b.ToTable("tblProjectCalendar");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsQuesForAbnieFani", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("DefaultValue")
                        .HasColumnType("int");

                    b.Property<bool>("HasGetValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEzafeBaha")
                        .HasColumnType("bit");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblQuesForAbnieFani");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsQuesForAbnieFaniValues", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PolVaAbroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("QuestionForAbnieFaniId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShomarehFBSelectedId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("PolVaAbroId");

                    b.HasIndex("QuestionForAbnieFaniId");

                    b.ToTable("tblQuesForAbnieFaniValues");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizKiloMetrazhOfHaml", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Asfalt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemFB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("KiloMetrazhOfHamlId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SakhteNashodeh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sheni")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("KiloMetrazhOfHamlId");

                    b.ToTable("tblRizKiloMetrazhOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizMetreForBarAvordAddedBoard", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarAvordAddedBoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RizMetreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordAddedBoardId");

                    b.HasIndex("RizMetreId");

                    b.ToTable("tblRizMetreForBarAvordAddedBoard");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizMetreForBarAvordAddedBoardStand", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BarAvordAddedBoardStandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RizMetreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BarAvordAddedBoardStandId");

                    b.HasIndex("RizMetreId");

                    b.ToTable("tblRizMetreForBarAvordAddedBoardStand");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizMetreUsers", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Arz")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long?>("ConditionContextId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConditionContextRel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Des")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Ertefa")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("FBId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ForItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("MeghdarJoz")
                        .HasColumnType("decimal(18,4)");

                    b.Property<long?>("OperationsOfHamlId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sharh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Shomareh")
                        .HasColumnType("bigint");

                    b.Property<string>("ShomarehNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Tedad")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Tool")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UseItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Vazn")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("ID");

                    b.HasIndex("FBId");

                    b.HasIndex("OperationsOfHamlId");

                    b.ToTable("tblRizMetreUsers");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsSegmentsFromGEODB", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RemoveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SegmentIdFromGEODB")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserInserter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRemover")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("OperationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("tblSegmentsFromGEODB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsShomarehFBForQuesForAbnieFani", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("QuesForAbnieFaniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Shomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuesForAbnieFaniId");

                    b.ToTable("tblShomarehFBForQuesForAbnieFani");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsSubItemsAddingToFB", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConditionType")
                        .HasColumnType("int");

                    b.Property<string>("DesOfAddingItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsAdding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalWorking")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ItemsAddingToFBId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemsAddingToFBId");

                    b.ToTable("tblSubItemsAddingToFB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsZarayebTabdil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemShomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<long>("OperationsOfHamlId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("Z1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Z2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Z3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Z4")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OperationsOfHamlId");

                    b.ToTable("tblZarayebTabdil");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsZaribRoadType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("NoeFB")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("ZaribSakhtehNashodeh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ZaribSheni")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("tblZaribRoadType");
                });

            modelBuilder.Entity("RMS.Models.StoredProceduresData.QuesForAbnieFaniValuesDto", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolVaAbroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("QuestionForAbnieFaniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Shomareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShomarehFBSelectedId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("QuesForAbnieFaniValuesDto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAbadeKoole", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsHadAksarErtefaKoole", "HadAksarErtefaKoole")
                        .WithMany()
                        .HasForeignKey("HadAksarErtefaKooleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HadAksarErtefaKoole");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAbroDaliDetails", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAbadeKoole", "AbadeKoole")
                        .WithMany()
                        .HasForeignKey("AbadeKooleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbadeKoole");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvord", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BaravordUser")
                        .WithMany()
                        .HasForeignKey("BaravordUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaravordUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetails", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvord", "AmalyateKhakiInfoForBarAvord")
                        .WithMany()
                        .HasForeignKey("AmalyateKhakiInfoForBarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsNoeKhakBardari", "NoeKhakBardari")
                        .WithMany()
                        .HasForeignKey("NoeKhakBardariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmalyateKhakiInfoForBarAvord");

                    b.Navigation("NoeKhakBardari");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetailsMore", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetails", "AmalyateKhakiInfoForBarAvordDetails")
                        .WithMany()
                        .HasForeignKey("AmalyateKhakiInfoForBarAvordDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmalyateKhakiInfoForBarAvordDetails");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetailsRizMetre", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordDetails", "AmalyateKhakiInfoForBarAvordDetails")
                        .WithMany()
                        .HasForeignKey("AmalyateKhakiInfoForBarAvordDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsRizMetreUsers", "RizMetreUser")
                        .WithMany()
                        .HasForeignKey("RizMetreUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmalyateKhakiInfoForBarAvordDetails");

                    b.Navigation("RizMetreUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordEzafeBaha", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvord", "AmalyateKhakiInfoForBarAvord")
                        .WithMany()
                        .HasForeignKey("AmalyateKhakiInfoForBarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsNoeKhakBardariEzafeBaha", "NoeKhakBardariEzafeBaha")
                        .WithMany()
                        .HasForeignKey("NoeKhakBardariEzafeBahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmalyateKhakiInfoForBarAvord");

                    b.Navigation("NoeKhakBardariEzafeBaha");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordEzafeBahaRizMetre", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordEzafeBaha", "AmalyateKhakiInfoForBarAvordEzafeBaha")
                        .WithMany()
                        .HasForeignKey("AmalyateKhakiInfoForBarAvordEzafeBahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsRizMetreUsers", "RizMetreUser")
                        .WithMany()
                        .HasForeignKey("RizMetreUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmalyateKhakiInfoForBarAvordEzafeBaha");

                    b.Navigation("RizMetreUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvordMore", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAmalyateKhakiInfoForBarAvord", "AmalyateKhakiInfoForBarAvord")
                        .WithMany()
                        .HasForeignKey("AmalyateKhakiInfoForBarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AmalyateKhakiInfoForBarAvord");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAppOperationInfoDetails", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsAppOperationInfoMain", "AppOperationInfoMain")
                        .WithMany()
                        .HasForeignKey("AppOperationInfoMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsAppQuestion", "AppQuestion")
                        .WithMany()
                        .HasForeignKey("QuetionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AppOperationInfoMain");

                    b.Navigation("AppQuestion");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAppOperationInfoMain", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsAppQuestion", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBarAvordAddedBoard", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BaravordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaravordUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBarAvordAddedBoardStand", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BaravordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsBoardStandItems", "boardStandItems")
                        .WithMany()
                        .HasForeignKey("BoardStandItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaravordUser");

                    b.Navigation("boardStandItems");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsBaseInfo", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaseInfoType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsConditionContext", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsConditionGroup", "ConditionGroup")
                        .WithMany()
                        .HasForeignKey("ConditionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConditionGroup");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsDastakPolInfo", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsPolVaAbroBarAvord", "polVaAbroBarAvord")
                        .WithMany()
                        .HasForeignKey("PolVaAbroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("polVaAbroBarAvord");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsFB", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BaravordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaravordUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsFosoul", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsNoeFosoul", "NoeFosoul")
                        .WithMany()
                        .HasForeignKey("NoeFosoulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoeFosoul");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsGeneralProjectTiming", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsAddingToFB", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsItemsHasCondition_ConditionContext", "ItemsHasCondition_ConditionContext")
                        .WithMany()
                        .HasForeignKey("ItemsHasCondition_ConditionContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsHasCondition_ConditionContext");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsFBDependQuestionForAbnieFani", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsQuesForAbnieFani", "QuesForAbnieFani")
                        .WithMany()
                        .HasForeignKey("QuesForAbnieFaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuesForAbnieFani");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsFBShomarehValueShomareh", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BaravordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaravordUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsHasConditionAddedToFB", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BarAvordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsConditionGroup", "ConditionGroup")
                        .WithMany()
                        .HasForeignKey("ConditionGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsItemsHasCondition_ConditionContext", "ItemsHasCondition_ConditionContext")
                        .WithMany()
                        .HasForeignKey("ItemsHasCondition_ConditionContextId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BarAvordUser");

                    b.Navigation("ConditionGroup");

                    b.Navigation("ItemsHasCondition_ConditionContext");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsItemsHasCondition_ConditionContext", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsConditionContext", "ConditionContext")
                        .WithMany()
                        .HasForeignKey("ConditionContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsItemsHasCondition", "ItemsHasCondition")
                        .WithMany()
                        .HasForeignKey("ItemsHasConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsItemsHasCondition_ConditionContext", "ItemsHasCondition_ConditionContext")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("ConditionContext");

                    b.Navigation("ItemsHasCondition");

                    b.Navigation("ItemsHasCondition_ConditionContext");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsKiloMetrazhOfHaml", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BarAvordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsOperationsOfHaml", "OperationsOfHaml")
                        .WithMany()
                        .HasForeignKey("OperationOfHamlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarAvordUser");

                    b.Navigation("OperationsOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsNiroZaribKarKard", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsMashinType", "NoeMashinAlat")
                        .WithMany()
                        .HasForeignKey("NoeMashinAlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoeMashinAlat");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperation", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationAmelMoaser", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationHasAddedOperations", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "AddedOperation")
                        .WithMany()
                        .HasForeignKey("AddedOperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AddedOperation");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationHasAddedOperationsLevelNumber", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperationHasAddedOperations", "OperationHasAddedOperations")
                        .WithMany()
                        .HasForeignKey("OperationHasAddedOperationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationHasAddedOperations");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperation_ItemsFB", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithOne("Operation_ItemsFBs")
                        .HasForeignKey("RMS.Models.Entity.clsOperation_ItemsFB", "OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationsOfHamlAndItems", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperationsOfHaml", "OperationsOfHaml")
                        .WithMany()
                        .HasForeignKey("OperationsOfHamlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationsOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperationsOfHaml_ItemsHasHaml", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsItemsHasHaml", "ItemsHasHaml")
                        .WithMany()
                        .HasForeignKey("ItemsHasHamlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsOperationsOfHaml", "OperationsOfHaml")
                        .WithMany()
                        .HasForeignKey("OperationsOfHamlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsHasHaml");

                    b.Navigation("OperationsOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsPolVaAbroBarAvord", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBaravordUser", "BaravordUser")
                        .WithMany()
                        .HasForeignKey("BarAvordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaravordUser");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsProjectCalendar", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsGeneralProjectTiming", "GeneralProjectTiming")
                        .WithMany()
                        .HasForeignKey("GeneralProjectTimingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralProjectTiming");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsQuesForAbnieFaniValues", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsPolVaAbroBarAvord", "PolVaAbroBarAvord")
                        .WithMany()
                        .HasForeignKey("PolVaAbroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsQuesForAbnieFani", "QuestionForAbnieFani")
                        .WithMany()
                        .HasForeignKey("QuestionForAbnieFaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolVaAbroBarAvord");

                    b.Navigation("QuestionForAbnieFani");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizKiloMetrazhOfHaml", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsKiloMetrazhOfHaml", "KiloMetrazhOfHaml")
                        .WithMany()
                        .HasForeignKey("KiloMetrazhOfHamlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KiloMetrazhOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizMetreForBarAvordAddedBoard", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBarAvordAddedBoard", "BarAvordAddedBoard")
                        .WithMany()
                        .HasForeignKey("BarAvordAddedBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsRizMetreUsers", "RizMetreUsers")
                        .WithMany()
                        .HasForeignKey("RizMetreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarAvordAddedBoard");

                    b.Navigation("RizMetreUsers");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizMetreForBarAvordAddedBoardStand", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsBarAvordAddedBoardStand", "BarAvordAddedBoardStand")
                        .WithMany()
                        .HasForeignKey("BarAvordAddedBoardStandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsRizMetreUsers", "RizMetreUsers")
                        .WithMany()
                        .HasForeignKey("RizMetreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarAvordAddedBoardStand");

                    b.Navigation("RizMetreUsers");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsRizMetreUsers", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsFB", "FB")
                        .WithMany()
                        .HasForeignKey("FBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsOperationsOfHaml", "OperationsOfHaml")
                        .WithMany()
                        .HasForeignKey("OperationsOfHamlId");

                    b.Navigation("FB");

                    b.Navigation("OperationsOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsSegmentsFromGEODB", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.Entity.clsProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsShomarehFBForQuesForAbnieFani", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsQuesForAbnieFani", "QuesForAbnieFani")
                        .WithMany()
                        .HasForeignKey("QuesForAbnieFaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuesForAbnieFani");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsSubItemsAddingToFB", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsItemsAddingToFB", "ItemsAddingToFB")
                        .WithMany()
                        .HasForeignKey("ItemsAddingToFBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsAddingToFB");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsZarayebTabdil", b =>
                {
                    b.HasOne("RMS.Models.Entity.clsOperationsOfHaml", "OperationsOfHaml")
                        .WithMany()
                        .HasForeignKey("OperationsOfHamlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationsOfHaml");
                });

            modelBuilder.Entity("RMS.Models.Entity.clsOperation", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Operation_ItemsFBs")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
